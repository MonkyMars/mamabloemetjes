name: Sanity checker 3000
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  # Lightning-fast parallel builds
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: rust
            paths: "apps/backend/**/*.rs"
            cache_paths: |
              ~/.cargo/registry/index
              ~/.cargo/registry/cache
              ~/.cargo/git/db
              apps/backend/target
            build_script: |
              if ! echo "$CHANGED_FILES" | grep -q "apps/backend/.*\.rs"; then
                echo "‚è≠Ô∏è No Rust changes detected"
                exit 0
              fi
              echo "ü¶Ä Rust build starting..."
              curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
              source ~/.cargo/env
              cd apps/backend
              cargo check --locked &
              cargo fetch --locked &
              wait
              cargo build --release --locked
              echo "‚úÖ Rust build complete"
          - name: nextjs
            paths: "apps/frontend/**/*.ts apps/frontend/**/*.tsx"
            cache_paths: |
              ~/.bun/install/cache
              apps/frontend/node_modules
              apps/frontend/.next/cache
            build_script: |
              if ! echo "$CHANGED_FILES" | grep -qE "apps/frontend/.*\.(ts|tsx)"; then
                echo "‚è≠Ô∏è No NextJS changes detected"
                exit 0
              fi
              echo "‚ö° NextJS build starting..."
              curl -fsSL https://bun.sh/install | bash
              export PATH="$HOME/.bun/bin:$PATH"
              cd apps/frontend
              bun install --frozen-lockfile --silent
              # Skip linting if no lint script exists
              if bun run --silent lint 2>/dev/null; then
                echo "üßπ Linting passed"
              else
                echo "‚ÑπÔ∏è No lint script found, skipping"
              fi
              bun run build
              echo "‚úÖ NextJS build complete"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          else
            CHANGED_FILES=$(git diff --name-only HEAD~1)
          fi
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "Changed files:"
          echo "$CHANGED_FILES"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ matrix.cache_paths }}
          key: ${{ runner.os }}-${{ matrix.name }}-${{ hashFiles('apps/backend/Cargo.lock', 'apps/frontend/bun.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.name }}-${{ hashFiles('apps/backend/Cargo.lock', 'apps/frontend/bun.lock') }}-
            ${{ runner.os }}-${{ matrix.name }}-

      - name: Build ${{ matrix.name }}
        run: ${{ matrix.build_script }}
        env:
          CARGO_INCREMENTAL: 1
          CARGO_NET_RETRY: 2

  # Quick summary
  complete:
    needs: build
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: CI Summary
        run: |
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "‚úÖ All builds completed successfully"
          else
            echo "‚ùå Some builds failed"
            exit 1
          fi

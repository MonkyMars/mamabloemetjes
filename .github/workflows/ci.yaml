name: CI Pipeline

on:
<<<<<<< Updated upstream
=======
  push:
    branches:
      - "*" # Trigger on all branches for push events
>>>>>>> Stashed changes
  pull_request:
    branches:
      - main # Or specify the branch you want to target

jobs:
  build:
    runs-on: ubuntu-latest # Using Ubuntu runner
    container:
      image: node:16-alpine # Using Alpine image for Node.js (with additional setup for Rust)

    steps:
      # Checkout the code from the pull request
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies for Rust on Alpine
      - name: Install Rust dependencies on Alpine
        run: |
          apk add --no-cache \
            bash \
            build-base \
            libgcc \
            musl-dev \
            curl  # Make sure curl is available for Rust setup

      # Set up Rust environment
      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: "stable"

      # Install Rust dependencies
      - name: Install Rust dependencies
        run: |
          cd apps/backend
          cargo install --locked

      # Install Node.js using .nvmrc file
      - name: Set up Node.js from .nvmrc
        uses: actions/setup-node@v3
        with:
          node-version-file: apps/frontend/.nvmrc

      # Install Node.js packages using Bun
      - name: Install Node.js packages
        run: |
          cd apps/frontend
          bun install  # Using Bun to install Node.js dependencies

      # Run Rust check, tests, and build for my sanity.
      - name: Run Cargo Check
        run: |
          cd apps/backend
          cargo check

      - name: Run Cargo Tests
        run: |
          cd apps/backend
          cargo test

      - name: Build with Cargo (Release)
        run: |
          cd apps/backend
          cargo build --release

      # Run Bun lint
      - name: Run Bun Lint
        run: |
          cd apps/frontend
          bun run lint

      # Run Bun build
      - name: Run Bun Build
        run: |
          cd apps/frontend
          bun run build
